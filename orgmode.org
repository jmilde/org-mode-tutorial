#+TITLE: Org-mode tutorial
#+AUTHOR: Jan Milde

* The org-basics
:PROPERTIES:
:ID:       2728c73d-73ba-4ad6-9668-4f2c9f49df57
:END:
** outliner
- add another bullet point
  M-RET
- to move up down
  M-up/down
- change level
  Alt-left/right
*** refiling
- move file to another header
  C-c C-w
** markup
*Bold*, /italic/, =verbatim=, +strikethrough+


- bulleted
- unordered
- list


M-enter for new item
intendation important, also two newline before different list


1. kjlk
   - asdas
2. ödslkaj
   + lkjdslk
** LaTeX integration
- Characters: \alpha \rightarrow \beta
- math      : $O(n \log n )$

\begin{align*}
3*2+ 1 &= 6+1 \\
&=7
\end{align*}
** metadata
Put this at the top of the document:
#+TITLE: Examplefile
#+AUTHOR: Jan Milde
lots of options: like removeing table of content (more about that in export)
#+OPTIONS: toc:nil
** Properties
:PROPERTIES:
:END:
need to go under the header before text
can be searched with agenda like foor books "pages >200" if you want big one

M-x org-id-get-create  for creating Unique ID (good for linking etc.)
-> unique and links persist when archived, customize: ~/.emacs/.org-id-locations
** Drawers and notes
*** basic example
:drawer_example:
hidden info
:END:
*** Logbook and note logging
:LOGBOOK:
- Note taken on [2020-06-22 Mo 20:36] \\
  quick info
:END:
for stashing away stuff

/!\ needs customization
M-x customize-variable org-log-into-drawer
-> change value menu to LOGBOOK

C-c C-z for taking quick notes, which are then saved in the LOGBOOK drawer inside that scope
** links
  C-c C-l   add links (to website or files etc.)
  [[link] [description]]
  example: [[https:www.albatros-coding.de][albatros website]]

  C-c C-o to follow link

*** internally
   [[markup]] for a header, :CUSTOM_ID or so

   <<<target>>>  radio target
   -> radio target links every occurence of the targetword in the text to the radiolink target
   -> good for defenitions in a longer text or so
*** externally
   [[protocol: location] ] e.g [[file:/~/Documents/Code]]

   inside another file:
   M-x org-store-link   to store a link to something inside a file:
   example: [[file:Algorithms/Self%20Organizing%20Maps/model.py::with%20tf.variable_scope("input"):][todo change something in code]]

** tables
#+CONSTANTS: data_col4=55
| Some | Data | to | test | col1>2 |
|------+------+----+------+--------|
|    1 |    2 |  3 |   55 | False  |
|    3 |    4 |  4 |   55 | True   |
|    1 |    2 |  3 |   55 | False  |
#+TBLFM: $4=$data_col4; :: $5= if($1 >2, string("True"), string("False"));
- to move rows/columns
  M- up/down/left/right
- to insert/delete row/column
  Alt-Shift- up/right|down/left
- for new ---- line
  C-c -
- for adding up columns or active region in row
  C-c +

** Source Code
<s + Tab for shortcut
C-c ' for editing the code in the block in the mode of the language

C-c C-c in block to evaluate code and to print result in the org file
#+BEGIN_SRC python
  def hello():
      for x in range(10):
          print(x)
#+END_SRC
** Images
#+CAPTION: This is the caption
#+NAME: fig:albatros logo
[[~/Pictures/Albatros logo.jpg]]

- display images inline
  C-c C-x C-v

** Attachments
C-c C-a    to open menu
C-c C-a s  to set a directory where these files will be copied in if copying
C-c C-a o  to open current tasks attachment

** Literate programming
create a setup.org file for all your emacs configs
in ~/.emacs.d/setup.el insert (org-babel-load-file "~/.emacs.d/setup.org")

** export
- show all options
  C-c C-e
- use #+OPTIONS: to set exportoption for subtree, e.g:
  d:t      show drawer content
  \n:t     preserve line breaks
  p:t      export planing information (SCHEDULE/DEADLINE)
  todo:t   include TODO keywords into export


* todo functionality
Shift+M+ Enter for new TODO item or use shift-right on existing bullet
** DONE cycle through states
CLOSED: [2020-06-18 Do 23:10]
C-c C-t or shift-right/left
edit timestamps shift-left/right/up/right
** TODO add deadline or schedule
SCHEDULED: <2020-06-19 Fr> DEADLINE: <2020-06-22 Mo>
C-c C-d
C-c C-s

search for them:
C-c /
- different options: before date etc.
** TODO repeating tasks
SCHEDULED: <2020-06-19 Fr +1w>

(w=week, d=day, m=month, y=year)
add to the < time >:
+1w repeat every week
.+1w repeat one week after the task is marked as done
** TODO [#C] checklists and priorities [1/2][50%]
Shift-up/down adds a priority

add [] to header and C-c C-c to set it up
add [ %] to header
C-c C-c in subtask to tick it off
- [X] subtask
- [ ] subtask2

alt-shift-enter to add new item
** WAIT set extra states and status change logging
DEADLINE: <2020-06-19 Fr>
#+SEQ_todo: TODO(t@/!) PROCESSING WAIT | DONE ABANDONED
t- hotkey
@- log timestamp + note when creating
!- log timestamp when changing to different keyword
** TODO tags                                                          :chore:
C-c C-q
#+TAGS: bug feature chore
** agenda
org-agenda-files are searched through when using org-agenda
- C-c [ add a file to org-agenda-files
- C-c ] remove file from org-agenda-files

M-x org-agenda
org-agenda-a move with b/f
Shift-f is follow mode, so you see what task is behind every agenda point

M-x org-agenda C for setting up custom stuff


* Time
** Timers
*** Countdown
C-c C-x ;
*** relative timer
C-c C-x 0
*** Pausing and stopping
C-c C-x , for pausing/resuming any timer
C-u C-c C-x , for stopping/deleting timer
*** timestamps
C-c C-x . just timestamp
C-c C-x - timestamp plus note
** Clocking/Time Tracking
:PROPERTIES:
:ORDERED:  t
:END:
:LOGBOOK:
CLOCK: [2020-07-07 Di 14:00]--[2020-07-07 Di 14:01] =>  0:01
CLOCK: [2020-06-21 So 23:46]--[2020-06-21 So 23:47] =>  0:01
CLOCK: [2020-06-21 So 22:39]--[2020-06-21 So 23:46] =>  1:07
:END:
- to clock in
  C-c C-x C-TAB

- to clock out
  C-c C-x C-o

- jump to clocked task
  C-c C-x C-j

- cancel active clock
  C-c C-x C-q

- restart a clock
  C-c C-x C-x

- to see all timers you could restart (good with jump to clocked tas)
  C-u C-c C-x C-x

- display added up timers per task
  C-c C-x C-d

- clocktable
  C-c C-x C-r
  for exporting tim


* Captures
- create template e.g. work.txt, details in the docs
either set it up in:
M-x org-capture C
or define in setup.org (setup.el)
u
for nested structure eg. work: 1) invoices 2) tasks select multikey description
then the keys have to be e.g work=w work:invoices=wi work:tasks=wt

- C-u 1 M-x org-capture   this prefix lets you set the date being inserted: good for planning a day in the future


* Archiving
- archive entry in place
C-c C-x a
- archive entry in archive at bottom of file
C-c C-x A
-archive subtree
C-c C-x S

- OR define global archive file at the top
#+ARCHIVE: filename::
C-c C-x C-s archive to file

you can also define a different archive for a subtree


* Column View
put this at the top of the file:
#+COLUMNS: %7TODO(To Do) %40ITEM(Task) %TAGS(Tags) %6CLOCKSUM(Clock)

C-c C-x C-c start column view
q to exist column view
** Advanced
/!\ delete #+COLUMNS in the parent and restart file for this to work in the subtree
#+COLUMNS: %7TODO(To Do) %40ITEM(Task) %TAGS(Tags) %6CLOCKSUM(Clock) %8EFFORT(Effort){:} %8RATING(Rating)


Shift - right/left  to movie through the options
:PROPERTIES:
:END:
*** TODO hey
    :PROPERTIES:
    :EFFORT:   0:10
    :END:
ökölsakd
